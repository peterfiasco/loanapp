@page "/loan-applications/edit/{Id:int}"
@using LoanManagementSystem.Core.Interfaces
@using LoanManagementSystem.Core.Models
@inject ILoanApplicationService LoanService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Edit Loan Application</h3>

@if (model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" FormName="editLoanForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="id" class="form-label">ID</label>
                    <InputNumber id="id" @bind-Value="model.Id" class="form-control" disabled />
                </div>

                <div class="mb-3">
                    <label for="applicantName" class="form-label">Applicant Name</label>
                    <InputText id="applicantName" @bind-Value="model.ApplicantName" class="form-control" />
                    <ValidationMessage For="@(() => model.ApplicantName)" />
                </div>

                <div class="mb-3">
                    <label for="loanAmount" class="form-label">Loan Amount</label>
                    <InputNumber id="loanAmount" @bind-Value="model.LoanAmount" class="form-control" />
                    <ValidationMessage For="@(() => model.LoanAmount)" />
                </div>

                <div class="mb-3">
                    <label for="loanTerm" class="form-label">Loan Term (Months)</label>
                    <InputNumber id="loanTerm" @bind-Value="model.LoanTerm" class="form-control" />
                    <ValidationMessage For="@(() => model.LoanTerm)" />
                </div>

                <div class="mb-3">
                    <label for="interestRate" class="form-label">Interest Rate (%)</label>
                    <InputNumber id="interestRate" @bind-Value="model.InterestRate" class="form-control" />
                    <ValidationMessage For="@(() => model.InterestRate)" />
                </div>

                <div class="mb-3">
                    <label for="status" class="form-label">Status</label>
                    <InputSelect id="status" @bind-Value="model.LoanStatus" class="form-select">
                        @foreach (var status in Enum.GetValues(typeof(LoanStatus)))
                        {
                            <option value="@status">@status</option>
                        }
                    </InputSelect>
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="/loan-applications" class="btn btn-secondary">Cancel</a>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private LoanApplication? model;

    protected override async Task OnInitializedAsync()
    {
        model = await LoanService.GetLoanApplicationByIdAsync(Id);
        
        if (model == null)
        {
            NavigationManager.NavigateTo("/loan-applications");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (model != null)
        {
            await LoanService.UpdateLoanApplicationAsync(model);
            NavigationManager.NavigateTo("/loan-applications");
        }
    }
}
