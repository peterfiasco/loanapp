@page "/loan-applications/create"
@using LoanManagementSystem.Core.Interfaces
@using LoanManagementSystem.Core.Models
@inject ILoanApplicationService LoanService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Create New Loan Application</h3>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@model" OnValidSubmit="HandleValidSubmit" FormName="createLoanForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="applicantName" class="form-label">Applicant Name</label>
                <InputText id="applicantName" @bind-Value="model.ApplicantName" class="form-control" />
                <ValidationMessage For="@(() => model.ApplicantName)" />
            </div>

            <div class="mb-3">
                <label for="loanAmount" class="form-label">Loan Amount</label>
                <InputNumber id="loanAmount" @bind-Value="model.LoanAmount" class="form-control" />
                <ValidationMessage For="@(() => model.LoanAmount)" />
            </div>

            <div class="mb-3">
                <label for="loanTerm" class="form-label">Loan Term (Months)</label>
                <InputNumber id="loanTerm" @bind-Value="model.LoanTerm" class="form-control" />
                <ValidationMessage For="@(() => model.LoanTerm)" />
            </div>

            <div class="mb-3">
                <label for="interestRate" class="form-label">Interest Rate (%)</label>
                <InputNumber id="interestRate" @bind-Value="model.InterestRate" class="form-control" />
                <ValidationMessage For="@(() => model.InterestRate)" />
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Submit</button>
                <a href="/loan-applications" class="btn btn-secondary">Cancel</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoanApplication model = new();

    private async Task HandleValidSubmit()
    {
        await LoanService.CreateLoanApplicationAsync(model);
        NavigationManager.NavigateTo("/loan-applications");
    }
}
